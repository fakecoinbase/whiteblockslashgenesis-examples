substitutions:
  _ACCOUNT_PASSWORD: "password"
  _ETH_NETWORK_ID: "7777"
  _ACCOUNTS_TO_CREATE: "20"

services: 
  - name: geth
    image: "ethereum/client-go:alltools-latest"
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
    script:
      inline: >
        mkdir -p /geth/keystore;
        cp /accounts/keystore/* /geth/keystore;
        cp /accounts/static-nodes.json /geth/;
        echo $_ACCOUNT_PASSWORD > /geth/pw.txt;
        geth --nousb --datadir /geth/ init /accounts/genesis.json;
        geth --networkid $_ETH_NETWORK_ID --datadir /geth/ --http --http.addr 0.0.0.0 --miner.gasprice=${MINER_GASPRICE} --http.api "admin,web3,eth,net,personal,miner,txpool" --http.corsdomain "0.0.0.0" --txpool.nolocals --http.vhosts=* --verbosity=5 --port 30303 --nousb --miner.etherbase $(cat /accounts/address${INDEX}) --unlock $(cat /accounts/address${INDEX}) --allow-insecure-unlock --password /geth/pw.txt --mine --miner.threads=${MINER_THREADS} --nodekeyhex $(cat /accounts/priv$INDEX) --ethstats $NAME:$_ETH_STATS_SECRET@$_ETH_STATS_SERVER --nodiscover
  #--bootnodes enode://$(cat /accounts/nodekey0)@${GETH_SERVICE0_COMMON_NETWORK}:30303?discport=30303
    environment:
      MINER_GASPRICE: "1"
      MINER_THREADS: "1"
    resources:
      cpus: 6
      memory: 8 GB
      storage: 40 GiB

task-runners:
  - name: generate-accounts
    image: "gcr.io/whiteblock/helpers/ethereum/accounts:master"
    script:
      inline: accounts generate -c $_ACCOUNTS_TO_CREATE -e -d /accounts
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
    resources:
      memory: 2 GB

  - name: generate-genesis
    image: gcr.io/whiteblock/helpers/ethereum/genesis:master
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
    script:
      inline: genesis generate -a /accounts/accounts.json -o consensus=ethhash | tee /accounts/genesis.json
    resources:
      memory: 2 GB
  - name: generate-static-peers
    image: gcr.io/whiteblock/helpers/ethereum/static-peers:master
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
    script: 
      inline: generate --accounts-file /accounts/accounts.json --network common-network --service geth | tee /accounts/static-nodes.json
  
  - name: generate-keystore
    image: gcr.io/whiteblock/helpers/geth/keystore:master
    volumes:
      - path: /accounts/
        name: accounts
        scope: singleton
    script:
      inline: >
        echo $_ACCOUNT_PASSWORD > /tmp/pw.txt;
        keystore -p /tmp/pw.txt -f /accounts/accounts.json -o /accounts/keystore/
    resources:
      cpus: 2
      memory: 2 GB

  - name: deploy-contract
    image: gcr.io/whiteblock/ethereum/sc:latest
    script:
      inline: >
        sed -i "s/_HOST_/$GETH_SERVICE0_COMMON_NETWORK/g" /contracts/truffle-config.js;
        sed -i "s/_PORT_/8545/g" /contracts/truffle-config.js;
        truffle compile;
        truffle migrate --reset --network development;
    resources:
      cpus: 1
      memory: 2 GB
    input-files:
      - source-path: truffle-config.js
        destination-path: /contracts/
      - source-path: Timelock.sol
        destination-path: /contracts/contracts/Timelock.sol

  - name: await-block-production
    image: gcr.io/whiteblock/helpers/ethereum/await-blocks:master
    script:
      inline: await --target $GETH_SERVICE0_COMMON_NETWORK:8545
    resources:
      memory: 1 GB

tests: 
  - name: geth_basic_smart_contract
    phases:
      - name: generating-accounts
        tasks: 
        - type: generate-accounts      
      - name: creating-keystore-genesis-static-peers
        tasks:
          - type: generate-genesis
          - type: generate-keystore
          - type: generate-static-peers
      
      - name: starting-geth-nodes
        duration: 2m
        system:
          - type: geth
            count: 7
            resources:
              networks:
                - name: common-network
      
      - name: awaiting-block-production
        tasks:
          - type: await-block-production
            timeout: 10m
            networks:
              - name: common-network

      - name: deploy-smart-contract
        duration: 30m
        tasks:
          - type: deploy-contract
            timeout: 10m
            networks:
              - name: common-network

